const int DELAY = 50;
const int ITERATIONS = 10;

//Pins for flex sensors
const int PIN_RIGHT_IN = A0;
const int PIN_RIGHT_OUT = A1;
const int PIN_LEFT_IN = A2;
const int PIN_LEFT_OUT = A3;

//Pins for EL tape
const int PIN_RIGHT_TURN_1 = 2;
const int PIN_RIGHT_TURN_2 = 3;
const int PIN_RIGHT_TURN_3 = 4;
const int PIN_LEFT_TURN_1 = 5;
const int PIN_LEFT_TURN_2 = 6;
const int PIN_LEFT_TURN_3 = 7;

//which sensor to write to serial 1-RightIN 2-RightOut 3-LeftIn 4-LeftOut
const int SERIAL_WRITE = 4;

//Bounds for turning
const int SEN_RIGHT_IN = 400;//bounds right arm inside
const int SEN_RIGHT_OUT = 470;//bounds right arm outside
const int SEN_LEFT_IN = 450; //480;//bounds left arm inside
const int SEN_LEFT_OUT = 450; //470;//bounds left arm outside

//Bounds for stopping
const int SEN_STOP_OUT = 480;
const int SEN_STOP_IN_LOW = 480;
const int SEN_STOP_IN_HIGH = 530;

//globals for light
bool rightLight = false;
int rightInc = 0;
bool leftLight = false;
int leftInc = 0;
bool turnLight = false;

int isLeft; // # of iterations user maintains leftturn gesture
int notLeft; // 
int isRight; // # of iterations user maintains rightturn gesture
int notRight; // 

void setup() {
  // put your setup code here, to run once
  Serial.begin(9600);
  pinMode(PIN_RIGHT_TURN_1, OUTPUT);
  pinMode(PIN_RIGHT_TURN_2, OUTPUT);
  pinMode(PIN_RIGHT_TURN_3, OUTPUT);
  pinMode(PIN_LEFT_TURN_1, OUTPUT);
  pinMode(PIN_LEFT_TURN_2, OUTPUT);
  pinMode(PIN_LEFT_TURN_3, OUTPUT);
}

void leftSignalLight()
{
    if(rightLight) {
      if (rightInc >= 0 && rightInc < 10) {
        digitalWrite(PIN_RIGHT_TURN_1, HIGH);
        digitalWrite(PIN_RIGHT_TURN_2, LOW);
        digitalWrite(PIN_RIGHT_TURN_3, LOW);
      } else if (rightInc >= 10, rightInc < 20) {
        digitalWrite(PIN_RIGHT_TURN_1, LOW);
        digitalWrite(PIN_RIGHT_TURN_2, HIGH);
        digitalWrite(PIN_RIGHT_TURN_3, LOW);
      } else if (rightInc >= 20, rightInc < 30) {
        digitalWrite(PIN_RIGHT_TURN_1, LOW);
        digitalWrite(PIN_RIGHT_TURN_2, LOW);
        digitalWrite(PIN_RIGHT_TURN_3, HIGH); 
      } else {
        rightInc = 0;
      }
      rightInc++;
    }else{
      rightInc = 0;
        digitalWrite(PIN_RIGHT_TURN_1, LOW);
        digitalWrite(PIN_RIGHT_TURN_2, LOW);
        digitalWrite(PIN_RIGHT_TURN_3, LOW); 
    }
}

void rightSignalLight()
{
    if(leftLight) {
      if (leftInc >= 0 && leftInc < 10) {
        digitalWrite(PIN_LEFT_TURN_1, HIGH);
        digitalWrite(PIN_LEFT_TURN_2, LOW);
        digitalWrite(PIN_LEFT_TURN_3, LOW);
      } else if (leftInc >= 10, leftInc < 20) {
        digitalWrite(PIN_LEFT_TURN_1, LOW);
        digitalWrite(PIN_LEFT_TURN_2, HIGH);
        digitalWrite(PIN_LEFT_TURN_3, LOW);
      } else if (leftInc >= 20, leftInc < 30) {
        digitalWrite(PIN_LEFT_TURN_1, LOW);
        digitalWrite(PIN_LEFT_TURN_2, LOW);
        digitalWrite(PIN_LEFT_TURN_3, HIGH); 
      } else {
        leftInc = 0;
      }
      leftInc++;
    }else{
        digitalWrite(PIN_LEFT_TURN_1, LOW);
        digitalWrite(PIN_LEFT_TURN_2, LOW);
        digitalWrite(PIN_LEFT_TURN_3, LOW); 
      leftInc = 0;
    }
}

void stopSignalLight()
{
  
}

void testLeft(int sensLeftIn, int sensLeftOut)
{
  Serial.println(isLeft);
 if(sensLeftIn < SEN_LEFT_IN && sensLeftOut > SEN_LEFT_OUT) {
    isLeft++;
  } else {
    isLeft = 0;
  }

  if (isLeft > ITERATIONS)
    leftLight = true;
   else
    leftLight = false;    
}

void testRight(int sensRightIn, int sensRightOut)
{
 if(sensRightIn < SEN_RIGHT_IN && sensRightOut > SEN_RIGHT_OUT) {
    isRight++;
  } else {
    isRight = 0;
  }

  if (isRight > ITERATIONS)
    rightLight = true;
   else
    rightLight = false;    
}

void testStop(int sensLeftIn, int sensLeftOut)
{
  if (sensLeftOut > SEN_STOP_OUT && sensLeftIn < SEN_STOP_IN_HIGH && sensLeftIn > SEN_STOP_IN_LOW)
    stopSignalLight();
  else
    stopSignalLight();
}

void serialWrite(int select, int sensRightIn, int sensRightOut, int sensLeftIn, int sensLeftOut)
{
  switch(select) {
    case 0:
      break;
    case 1:
      Serial.println(sensRightIn);
      break;
    case 2:
      Serial.println(sensRightOut);
      break;
    case 3:
      Serial.println(sensLeftIn);
      break;
    case 4:
      Serial.println(sensLeftOut);
      break;
     default:
      Serial.println("What??");
  }
}
void loop() {
  // put your main code here, to run repeatedly:
  int sensRightIn;
  int sensRightOut;
  int sensLeftIn;
  int sensLeftOut;
  
  while(1)
  {
    //Reading Data from 4 Flex sensors
    sensRightIn = analogRead(PIN_RIGHT_IN);
    sensRightOut = analogRead(PIN_RIGHT_OUT);
    sensLeftIn = analogRead(PIN_LEFT_IN);
    sensLeftOut = analogRead(PIN_LEFT_OUT);

    //Lights
    leftSignalLight();
    rightSignalLight();
    stopSignalLight();

    serialWrite(SERIAL_WRITE, sensRightIn, sensRightOut, sensLeftIn, sensLeftOut);
    delay(DELAY);

    testRight(sensRightIn, sensRightOut);
    testLeft(sensLeftIn, sensLeftOut);
    //testStop(sensLeftIn, sensLeftOut);
  }
